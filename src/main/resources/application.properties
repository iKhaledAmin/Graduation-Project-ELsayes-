server.port=9090
# Database Configuration Locally...
spring.datasource.url=jdbc:mysql://localhost:3306/gp-elsayes-db?ssl=false&createDatabaseIfNotExist=true


spring.datasource.username=root
spring.datasource.password=

# to can see all sql query in the console with a good format.

spring.jpa.open-in-view=true
spring.jpa.defer-datasource-initialization=true
spring.h2.console.enabled=true
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
#for each restart of your server ==> if there are any update  , this update will be added to the database.
# as example if you added new column in you entity if you have this update and you restarted the server ==>
#this column will added automatic to your database.
#You can make it "create-drop" ==> meaning each time you will restart your server he will drop all tables and
# Recreate it


spring.jpa.hibernate.ddl-auto=update





## DataSource settings: set here your own configurations for the database
## connection. In this example we have "sql6701738" as database name and
## "sql6.freesqldatabase.com" as host of the database.
#spring.datasource.url=jdbc:mysql://sql6.freesqldatabase.com:3306/sql6701738
#spring.datasource.username=sql6701738
#spring.datasource.password=czt23rkAqP
#
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
#
## Specify the DBMS
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto=update